{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/fileService/file.service.ts","webpack:///./src/app/files-list/files-list.component.html","webpack:///./src/app/files-list/files-list.component.scss","webpack:///./src/app/files-list/files-list.component.ts","webpack:///./src/app/upload/upload.component.html","webpack:///./src/app/upload/upload.component.scss","webpack:///./src/app/upload/upload.component.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1>Hello</h1><h1>{{currUser}}</h1>\\r\\n<app-upload #fileUpload></app-upload>\\r\\n\\r\\n<mat-divider></mat-divider>\\r\\n<div class=\\\"files-list\\\">\\r\\n  <app-files-list #filesList></app-files-list>\\r\\n</div>\"","module.exports = \".files-list {\\n  margin: 1rem; }\\n\"","import { Component, ViewChild, OnInit } from '@angular/core';\r\nimport { UploadComponent } from './upload/upload.component';\r\nimport { Observable } from 'rxjs';\r\nimport { FilesListComponent } from './files-list/files-list.component';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  @ViewChild('fileUpload') fileUpload: UploadComponent;\r\n  @ViewChild('filesList') filesList: FilesListComponent;\r\n  currUser: Observable<string>;\r\n\r\n  ngOnInit() {\r\n    this.fileUpload.upload.subscribe(() => {\r\n      this.filesList.getFiles();\r\n    });\r\n    this.currUser = this.filesList.getUser();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FilePondModule, registerPlugin } from 'ngx-filepond';\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { FileService } from './fileService/file.service';\r\nimport { FilesListComponent } from './files-list/files-list.component';\r\nimport { UploadComponent } from './upload/upload.component';\r\n\r\nregisterPlugin(FilePondPluginImagePreview);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FilesListComponent,\r\n    UploadComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatTooltipModule,\r\n    MatDividerModule,\r\n    FilePondModule\r\n  ],\r\n  providers: [FileService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment.prod';\r\nimport { IFile } from '../file/file.interface';\r\nimport {saveAs as importedSaveAs} from 'file-saver';\r\nimport { JSONP_ERR_WRONG_RESPONSE_TYPE } from '../../../node_modules/@angular/common/http/src/jsonp';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getFiles() {\r\n    return this.httpClient.get<{success: boolean, return: IFile[]}>(`${environment.api}/file/`);\r\n  }\r\n\r\n  public downloadFile(id: string) {\r\n    // return this.httpClient.get(`${environment.api}/file/${id}`, { responseType: 'text' }).subscribe(url => {\r\n    return this.httpClient.get<{s3url: string, fileName: string}>(`${environment.api}/file/${id}`).subscribe(ret => {\r\n      this.httpClient.get(ret.s3url, { responseType: 'blob' }).subscribe(blob => {\r\n        importedSaveAs(blob, ret.fileName);\r\n      });\r\n    });\r\n  }\r\n\r\n  public deleteFile(id: string) {\r\n    return this.httpClient.delete<{success: boolean, return: IFile}>(`${environment.api}/file/${id}`);\r\n  }\r\n\r\n  public getUser() {\r\n    return this.httpClient.get<string>(`${environment.api}/user`);\r\n  }\r\n}\r\n","module.exports = \"<mat-list>\\r\\n  <h3 mat-subheader>Files</h3>\\r\\n  <mat-list-item *ngFor=\\\"let file of files\\\">\\r\\n    <button mat-icon-button matTooltip=\\\"Download file\\\" (click)=\\\"downloadFile(file._id)\\\">\\r\\n        <mat-icon>cloud_download</mat-icon>\\r\\n    </button>\\r\\n    <h4 mat-line>{{file.fileName}}</h4>\\r\\n    <p mat-line>{{file.fileSize}}</p>\\r\\n    <button mat-icon-button matTooltip=\\\"Delete file\\\" (click)=\\\"deleteFile(file._id)\\\">\\r\\n        <mat-icon>delete</mat-icon>\\r\\n    </button>\\r\\n\\r\\n  </mat-list-item>\\r\\n</mat-list>\"","module.exports = \".mat-list-icon {\\n  color: rgba(0, 0, 0, 0.54); }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { IFile } from '../file/file.interface';\r\nimport { FileService } from '../fileService/file.service';\r\n\r\n@Component({\r\n  selector: 'app-files-list',\r\n  templateUrl: './files-list.component.html',\r\n  styleUrls: ['./files-list.component.scss']\r\n})\r\nexport class FilesListComponent implements OnInit {\r\n  files: IFile[] = [];\r\n  constructor(public fileService: FileService) { }\r\n\r\n  ngOnInit() {\r\n    const sub = this.fileService.getFiles().subscribe((files) => {\r\n      this.files = files.return;\r\n    }, (err) => {\r\n    }, () => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n\r\n  public getFiles() {\r\n    const sub = this.fileService.getFiles().subscribe((files) => {\r\n      this.files = files.return;\r\n    }, (err) => {\r\n    }, () => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n\r\n  public deleteFile(id: string) {\r\n    const sub = this.fileService.deleteFile(id).subscribe((file) => {\r\n      this.getFiles();\r\n    },\r\n    (err) => {\r\n    }, () => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n\r\n  public downloadFile(id: string) {\r\n    this.fileService.downloadFile(id);\r\n  }\r\n\r\n  public getUser() {\r\n    return this.fileService.getUser();\r\n  //   const sub = this.fileService.getUser().subscribe((user) => {\r\n  //     this.getUser();\r\n  //   },\r\n  //   (err) => {\r\n  //   }, () => {\r\n  //     sub.unsubscribe();\r\n  //   });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"upload\\\">\\r\\n    <div class=\\\"controls\\\">\\r\\n        <div class=\\\"buttons\\\">\\r\\n            <button mat-icon-button matTooltip=\\\"Clear List\\\" (click)=\\\"removeAll()\\\">\\r\\n                <mat-icon>cancel</mat-icon>\\r\\n            </button>\\r\\n            <mat-hint class=\\\"filesCount\\\">{{filePond && filePond.getFiles ? filePond.getFiles().length : 0}}/{{pondOptions.maxFiles}}</mat-hint>\\r\\n            <button mat-icon-button matTooltip=\\\"Upload All\\\" (click)=\\\"processAll()\\\">\\r\\n                <mat-icon>cloud_upload</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <file-pond #filePond\\r\\n        [options]=\\\"pondOptions\\\"\\r\\n        (onaddfile)=\\\"pondHandleAddFile($event)\\\"\\r\\n        (onprocessfile)=\\\"emitUpload($event)\\\">\\r\\n    </file-pond>\\r\\n</div>\"","module.exports = \".controls {\\n  margin-top: 1rem;\\n  margin-bottom: 1.25rem;\\n  display: flex;\\n  justify-content: center; }\\n\\n.buttons {\\n  width: 20%;\\n  display: flex;\\n  justify-content: space-evenly; }\\n\\n.filesCount {\\n  padding-top: 0.5rem;\\n  left: 1em;\\n  right: 1em;\\n  top: 0;\\n  margin: 0 0 1em 0;\\n  color: #4f4f4f;\\n  will-change: transform, opacity; }\\n\"","import { Component, ViewChild, OnDestroy, OnInit, EventEmitter } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.scss']\r\n})\r\nexport class UploadComponent implements OnInit, OnDestroy {\r\n  @ViewChild('filePond') filePond: any;\r\n  filesCount: Observable<number>;\r\n  upload: EventEmitter<void> = new EventEmitter();\r\n\r\n  FileStatus = {\r\n    INIT: 1,\r\n    IDLE: 2,\r\n    PROCESSING: 3,\r\n    PROCESSING_PAUSED: 4,\r\n    PROCESSING_COMPLETE: 5,\r\n    PROCESSING_ERROR: 6,\r\n    LOADING: 7,\r\n    LOAD_ERROR: 8\r\n  };\r\n\r\n  pondOptions = {\r\n    class: 'file-pond',\r\n    maxFiles: 25,\r\n    multiple: true,\r\n    labelIdle: 'Drag & Drop your files or <span class=\"filepond--label-action\"> Browse </span>',\r\n    server: {\r\n      process: `${environment.api}/file/upload`,\r\n      revert: {\r\n        url: `${environment.api}/file`,\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n    },\r\n    instantUpload: true,\r\n    dropOnElement: false,\r\n    dropOnPage: true,\r\n    imagePreviewHeight: 250,\r\n    required: true,\r\n    allowImagePreview: true,\r\n    allowRevert: false\r\n  };\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.filePond.destroy();\r\n  }\r\n\r\n  emitUpload(event: Event) {\r\n    this.upload.emit();\r\n  }\r\n\r\n  removeAll() {\r\n    this.filePond.removeFiles();\r\n  }\r\n\r\n  processAll() {\r\n    const files = this.filePond.getFiles();\r\n    for (let i = 0; i < files.length; i++) {\r\n      if (files[i].status !== this.FileStatus.PROCESSING &&\r\n        files[i].status !== this.FileStatus.PROCESSING_COMPLETE &&\r\n        files[i].status !== this.FileStatus.PROCESSING_PAUSED) {\r\n          this.filePond.processFile(files[i].id);\r\n      }\r\n    }\r\n  }\r\n\r\n  pondHandleAddFile(event: any) {\r\n    const file: any = event.file;\r\n    if (file) {\r\n      file.setMetadata('name', file.filename);\r\n      file.setMetadata('lastModified', file.file.lastModified);\r\n      file.setMetadata('size', file.fileSize);\r\n      file.setMetadata('type', file.fileType);\r\n      file.setMetadata('extension', file.fileExtension);\r\n    }\r\n  }\r\n}\r\n","export const environment = {\r\n  production: true,\r\n  server: 'https://seal.blue.com:9000/',\r\n  api: 'https://seal.blue.com:9000/api'\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\nexport const environment = {\r\n  production: false,\r\n  server: 'https://seal.blue.com:9000/',\r\n  api: 'https://seal.blue.com:9000/api'\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}